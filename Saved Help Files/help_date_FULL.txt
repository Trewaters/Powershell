
NAME
    Get-Date
    
SYNOPSIS
    Gets the current date and time.
    
SYNTAX
    Get-Date [-Format <string>] [[-Date] <DateTime>] [-Day <int>] [-DisplayHint {Date | Time | DateTime}] [-Hour <int>]
     [-Minute <int>] [-Month <int>] [-Second <int>] [-Year <int>] [<CommonParameters>]
    
    Get-Date [-UFormat <string>] [[-Date] <DateTime>] [-Day <int>] [-DisplayHint {Date | Time | DateTime}] [-Hour <int>
    ] [-Minute <int>] [-Month <int>] [-Second <int>] [-Year <int>] [<CommonParameters>]
    
    
DESCRIPTION
    The Get-Date cmdlet gets a DateTime object that represents the current date or a date that you specify. It can form
    at the date and time in several Windows and UNIX formats. You can use Get-Date to generate a date or time character
     string, and then send the string to other cmdlets or programs.
    

PARAMETERS
    -Date <DateTime>
        Specifies a date and time. By default, Get-Date gets the current system date and time.
        
        Type the date in a format that is standard for the system locale, such as dd-MM-yyyy (German [Germany]) or MM/d
        d/yyyy (English [United States]).
        
        Required?                    false
        Position?                    1
        Default value                
        Accept pipeline input?       true (ByValue, ByPropertyName)
        Accept wildcard characters?  false
        
    -Day <int>
        Specifies the day of the month that is displayed. Enter a value from 1 to 31. This value is displayed instead o
        f the current day. 
        
        If you specify a value that is greater than the number of days in the month, Windows PowerShell adds the number
         of days to the month and displays the result. For example, "get-date -month 2 -day 31" displays "March 3", not
         "February 31".
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -DisplayHint <DisplayHintType>
        Determines which elements of the date and time are displayed. 
        Valid values are: 
        
        -- Date: displays only the date
        -- Time: displays only the time
        -- DateTime: displays the date and time
        
        DateTime is the default.
        
        This parameter does not affect the DateTime object that Get-Date retrieves.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Format <string>
        Displays the date and time in the Microsoft .NET Framework format indicated by the format specifier. Enter a fo
        rmat specifier. For a list of available format specifiers, see "DateTimeFormatInfo Class" in the MSDN (Microsof
        t Developer Network) library at http://go.microsoft.com/fwlink/?LinkId=143638.
        
        When you use the Format parameter, Windows PowerShell retrieves only the properties of the DateTime object that
         it needs to display the date in the format that you specify. As a result, some of the properties and methods o
        f DateTime objects might not be available.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Hour <int>
        Specifies the hour that is displayed. Enter a value from 1 to 23. This value is displayed instead of the curren
        t hour.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Minute <int>
        Specifies the minute that is displayed. Enter a value from 1 to 59. This value is displayed instead of the curr
        ent minute.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Month <int>
        Specifies the month that is displayed. Enter a value from 1 to 12. This value is displayed instead of the curre
        nt month.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Second <int>
        Specifies the second that is displayed. Enter a value from 1 to 59. This value is displayed instead of the curr
        ent second.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -UFormat <string>
        Displays the date and time in UNIX format. For a list of the format specifiers, see the Notes section.
        
        When you use the UFormat parameter, Windows PowerShell retrieves only the properties of the DateTime object tha
        t it needs to display the date in the format that you specify. As a result, some of the properties and methods 
        of DateTime objects might not be available.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Year <int>
        Specifies the year that is displayed. Enter a value from 1 to 9999. This value is displayed instead of the curr
        ent year.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer and OutVariable. For more information, type,
        "get-help about_commonparameters".
    
INPUTS
    None
        You cannot pipe input to this cmdlet.
    
    
OUTPUTS
    System.DateTime or System.String
        When you use the Format or UFormat parameters, the output object is System.String.
    
    
NOTES
    
    
        By default, the date-time is displayed in long-date and long-time formats for the system locale.
        
        When you pipe a date to cmdlets that expect string input, such as Add-Content, Windows PowerShell converts the 
        DateTime object to a string before adding it to the file. The default ToString() format is short date and long 
        time. To specify an alternate format, use the Format or UFormat parameters of Get-Date. 
        
        Uformat Values:
        
        The following are the values of the UFormat parameter. The format for the command is:
        
        get-date -uformat %<value>
        
        For example, 
        get-date -uformat %d
        
        Date-Time:
        Date and time - full  
        (default) (Friday, June 16, 2006 10:31:27 AM)
        c     Date and time - abbreviated (Fri Jun 16 10:31:27 2006)
        
        Date:
        D    Date in mm/dd/yy format (06/14/06)
        x    Date in standard format for locale (09/12/07 for English-US)
        
        Year:
        C   Century (20 for 2006)
        Y   Year in 4-digit format (2006)
        y   Year in 2-digit format (06)
        G   Same as 'Y'
        g   Same as 'y'
        
        Month: 
        b   Month name - abbreviated (Jan)
        B   Month name - full (January)
        h   Same as 'b'
        m   Month number (06)
        
        Week:
        W  Week of the year (00-52)
        V   Week of the year (01-53)
        U   Same as 'W'
        
        
        Day:
        a   Day of the week - abbreviated name (Mon)
        A   Day of the week - full name (Monday)
        u   Day of the week - number (Monday = 1)
        d   Day of the month - 2 digits (05)
        e   Day of the month - digit preceded by a space ( 5)
        j    Day of the year - (1-366)
        w   Same as 'u'
        
        Time:
        p   AM or PM
        r   Time in 12-hour format (09:15:36 AM)
        R   Time in 24-hour format - no seconds (17:45)
        T   Time in 24 hour format (17:45:52)
        X   Same as 'T'
        Z   Time zone offset from Universal Time Coordinate (UTC) (-07)
        
        Hour: 
        H   Hour in 24-hour format (17)
        I    Hour in 12 hour format (05)
        k   Same as 'H'
        l    Same as 'I' (Upper-case I = Lower-case L)
        
        Minutes & Seconds:
        M   Minutes (35)
        S   Seconds (05)
        s   Seconds elapsed since January 1, 1970 00:00:00 (1150451174.95705)
        
        Special Characters:
        n   newline character (\n)
        t   Tab character (\t)
        
    
    -------------------------- EXAMPLE 1 --------------------------
    
    C:\PS>get-date -DisplayHint date
    
    Tuesday, June 13, 2006
    
    
    Description
    -----------
    This command retrieves a DateTime object, but it displays only the date. It uses the DisplayHint parameter to indic
    ate that only the date is to be displayed.
    
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    C:\PS>get-date -format g
    
    6/13/2006 12:43 PM
    
    
    Description
    -----------
    This command retrieves the current date and time and formats it in short-date and short-time format. It uses the .N
    ET Framework "g" format specifier (General [short date and short time]) to specify the format.
    
    
    
    
    
    -------------------------- EXAMPLE 3 --------------------------
    
    C:\PS>get-date -uformat "%Y / %m / %d / %A / %Z"
    
    2006 / 06 / 13 / Tuesday / -07
    
    
    Description
    -----------
    This command retrieves the current date and time and formats it as specified by the command. In this case, the form
    at includes the full year (%Y), the two-digit numeric month (%m), the date (%d), the full day of the week (%A), and
     the offset from UTC ("Zulu").
    
    
    
    
    
    -------------------------- EXAMPLE 4 --------------------------
    
    C:\PS>(get-date -year 2000 -month 12 -day 31).dayofyear
    
    366
    
    
    Description
    -----------
    This command displays the day of the year for the current date. For example, December 31 is the 365th day of 2006, 
    but it is the 366th day of 2000.
    
    
    
    
    
    -------------------------- EXAMPLE 5 --------------------------
    
    C:\PS>$a = get-date
    
    C:\PS> $a.IsDaylightSavingTime()
    
    True
    
    
    Description
    -----------
    These commands tell you whether the current date and time are adjusted for daylight savings time in the current loc
    ale. 
    
    The first command creates a variable named $a and then assigns the object retrieved by Get-Date to the $a variable.
     Then, it uses the IsDaylightSavingTime method on the object in $a.
    
    To see the properties and methods of the DateTime object, type:
     "get-date | get-member".
    
    
    
    
    
    -------------------------- EXAMPLE 6 --------------------------
    
    C:\PS>$a = get-date
    
    C:\PS> $a.ToUniversalTime()
    
    Tuesday, June 13, 2006 8:09:19 PM
    
    
    Description
    -----------
    These commands convert the current date and time to UTC time.
    
    The first command creates a variable named $a and then assigns the object retrieved by Get-Date to the $a variable.
     Then, it uses the ToUniversalTime method on the object in $a.
    
    
    
    
    
    -------------------------- EXAMPLE 7 --------------------------
    
    C:\PS>$a = get-wmiobject win32_bios -computer server01
    
    $a | format-list -property Name, @{Label="BIOS Age"; `
    Expression={(get-date) - $_.ConvertToDateTime($_.ReleaseDate)}}
    
    Name     : Default System BIOS
    BIOS Age : 1345.17:31:07.1091047
    
    
    Description
    -----------
    Windows Management Instrumentation (WMI) uses a different date-time object than the .NET Framework date-time object
     that Get-Date returns. To use date-time information from WMI in a command with date-time information from Get-Date
    , you have to use the ConvertToDateTime method to convert WMI CIM_DATETIME objects to .NET Framework DateTime objec
    ts.
    
    The commands in this example display the name and age of the BIOS on a remote computer, Server01. 
    
    The first command uses the Get-WmiObject cmdlet to get an instance of the Win32_BIOS class on Server01 and then sto
    res it in the $a variable.
    
    The second command uses the pipeline operator (|) to send the WMI object stored in $a to the Format-List cmdlet. Th
    e Property parameter of Format-List is used to specify two properties to display in the list, "Name" and "BIOS Age"
    . The "BIOS Age" property is specified in a hash table. The table includes the Label key, which specifies the name 
    of the property, and the Expression key, which contains the expression that calculates the BIOS age. The expression
     uses the ConvertToDateTime method to convert each instance of ReleaseDate to a .NET Framework DateTime object. The
    n, the value is subtracted from the value of the Get-Date cmdlet, which, without parameters, gets the current date.
    
    The backtick character (`) is the line continuation character in Windows PowerShell.
    
    
    
    
    
    -------------------------- EXAMPLE 8 --------------------------
    
    C:\PS>get-date
    
    Tuesday, June 13, 2006 12:43:42 PM
    
    
    Description
    -----------
    This command gets a DateTime object and displays the current date and time in the long date and long time formats f
    or the system locale, as though you typed "get-date -format F".
    
    
    
    
    
    -------------------------- EXAMPLE 9 --------------------------
    
    C:\PS>get-date
    
    C:\PS> Tuesday, September 26, 2006 11:25:31 AM
    
    c:\PS>(get-date).ToString()
    9/26/2006 11:25:31 AM
    
    C:\PS>get-date | add-content test.txt  
    # Adds 9/26/2006 11:25:31 AM
    
    C:\PS>get-date -format F | add-content test.txt
    # Adds Tuesday, September 26, 2006 11:25:31 AM
    
    
    Description
    -----------
    These commands demonstrate how to use Get-Date with Add-Content and other cmdlets that convert the DateTime object 
    that Get-Date generates to a string.
    
    The first command shows that the default display from a "get-date" command is in long-date and long-time format.
    
    The second command shows that the default display from the ToString() method of the DateTime object is in short-dat
    e and short-time format.
    
    The third command uses a pipeline operator to send the DateTime object to the Add-Content cmdlet, which adds the co
    ntent to the Test.txt file. Because Add-Content uses the ToString() method of the DateTime object, the date that is
     added is in short-date and short-time format.
    
    The fourth command uses the Format parameter of Get-Date to specify the format. When you use the Format or UFormat 
    parameters, Get-Date generates a string, not a DateTime object. Then, when you send the string to Add-Content, it a
    dds the string to the Test.txt file without changing it.
    
    
    
    
    
    
RELATED LINKS
    Online version: http://go.microsoft.com/fwlink/?LinkID=113313
    Set-Date 
    New-TimeSpan 



